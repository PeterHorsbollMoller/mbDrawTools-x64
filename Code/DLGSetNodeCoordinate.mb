'*******************************************************************************
'** 	Created By Peter Horsbøll Møller, Pitney Bowes
'** 	Program:
'** 	Modul:
'**
'*******************************************************************************

'-------------------------------------
Include "Library\MapBasic.def"
Include "Library\Icons.def"
Include "Library\Menu.def"
'**default constants...
Include "Library\Defaults.def"

'-------------------------------------
Include "Library\DEBUGLib.def"
Include "Library\ERRORLib.def"
Include "Library\MATHLib.def"
Include "Library\OBJECTMZLib.def"
Include "Library\TABLELib.def"

Include "DLGSetNodeCoordinate.def"

Declare Sub DLGSNCDialog_OnLoad
Declare Sub DLGSNCOK_Clicked
Declare Sub DLGSNCPrevNode_Clicked
Declare Sub DLGSNCNextNode_Clicked
Declare Sub DLGSNCDeleteNode_Clicked
Declare Sub DLGSNCZoomIn_Clicked
Declare Sub DLGSNCObjectHasZ_Clicked
Declare Sub DLGSNCObjectHasM_Clicked
Declare Sub DLGSNCZoomOut_Clicked
Declare Sub DLGSNCRefreshDialog
Declare Sub DLGSNCRefreshObject

Define	CTRL_LBL_SEGMENT_NODE		100
Define	CTRL_CMD_DELETE_NODE		200
Define	CTRL_CMD_PREV_NODE			310
Define	CTRL_CMD_NEXT_NODE			310
Define	CTRL_TXT_X				400
Define	CTRL_TXT_Y				410
Define	CTRL_TXT_Z				420
Define	CTRL_CHK_Z				421
Define	CTRL_TXT_M				430
Define	CTRL_CHK_M				431

Dim	mnSegment, mnNode, mnMID As Integer,
	moInput, moPoint As Object,
	mfX, mfY, mfZ, mfM As Float,
	mpenTemp, mpenOrig As Pen,
	msymTemp As Symbol,
	mbSupportMZ As Integer

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Business Insight
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DLGSetNodeCoordinate( oInput As Object			'**Object to change the nodes of, changed object will also be returned via the variable
						, ByVal nSegment As Integer	'**Default segment of the object
						, ByVal nNode As Integer		'**Default node of the object to change
						, ByVal bSupportMZ As Logical	'**Determines if the table for object supports MZ values
						) As Logical				'**Returns TRUE if the user clicked OK to the dialog, else FALSE

Dim	sCsys As String

OnError GoTo ErrorOccured

DLGSetNodeCoordinate = FALSE

	mnSegment		= nSegment
	mnNode		= nNode
	moInput		= oInput
	mbSupportMZ	= bSupportMZ

	mpenTemp		= MakePen (4, 3, 16711935)
	mpenOrig		= objectInfo(moInput, OBJ_INFO_PEN)
	msymTemp		= MakeFontSymbol(60,9445631,20,"MapInfo Symbols",256,0)

	Alter Object moInput
		Info OBJ_INFO_PEN, mpenTemp

	mnMID	= FrontWindow()
	Call TABClose("__NODE__CHANGER")
	Create Table __NODE__CHANGER
		(ID Integer)
		File TempFileName$("") Hide
	If SystemInfo(SYS_INFO_MIVERSION) >= 2300 Then
		sCsys = TableInfo(SelectionInfo(SEL_INFO_TABLENAME), TAB_INFO_COORDSYS_CLAUSE)
		Run Command "Create Map For __NODE__CHANGER " & sCsys & "SupportMZ"
	Else
		Create Map For __NODE__CHANGER
			Using SelectionInfo(SEL_INFO_TABLENAME)
	End If
	Create Point
		Into Variable moPoint
		(ObjectNodeX(moInput, mnSegment, mnNode), ObjectNodeY(moInput, mnSegment, mnNode))
		Symbol msymTemp

	Insert Into __NODE__CHANGER (OBJ)
		Values (moInput)
	Insert Into __NODE__CHANGER (OBJ)
		Values (moPoint)

	Add Map
		Window mnMID
		Layer __NODE__CHANGER

	Dialog
		Title "Set Node Coordinate"
		Calling DLGSNCDialog_OnLoad

		Control StaticText		ID CTRL_LBL_SEGMENT_NODE
			Position 5,7		Width 115
			Title "Segment " & FormatNumber$(mnSegment) & " - Node " & FormatNumber$(mnNode) & " of " & FormatNumber$(ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment))

		Control Button			ID CTRL_CMD_DELETE_NODE
			Position 120,5		Width 30
			Title "Delete"
			Calling DLGSNCDeleteNode_Clicked

		Control Button			ID CTRL_CMD_PREV_NODE
			Position 160,5		Width 20
			Title "&<"
			Calling DLGSNCPrevNode_Clicked
		Control Button			ID CTRL_CMD_NEXT_NODE
			Position 185,5		Width 20
			Title "&>"
			Calling DLGSNCNextNode_Clicked

		Control StaticText
			Position 5,25
			Title "&X:"
		Control EditText		ID CTRL_TXT_X
			Position 5,35		Width 95
		Control StaticText
			Position 110,25
			Title "&Y:"
		Control EditText		ID CTRL_TXT_Y
			Position 110,35		Width 95

		Control CheckBox		ID CTRL_CHK_Z
			Position 5,55
			Title "&Z:"
			Calling DLGSNCObjectHasZ_Clicked
		Control EditText		ID CTRL_TXT_Z
			Position 5,65		Width 95

		Control CheckBox		ID CTRL_CHK_M
			Position 110,55
			Title "&M:"
			Calling DLGSNCObjectHasM_Clicked
		Control EditText		ID CTRL_TXT_M
			Position 110,65		Width 95

		Control Button
			Position 5,85		Width 40
			Title "Zoom &In"
			Calling DLGSNCZoomIn_Clicked
		Control Button
			Position 50,85		Width 40
			Title "Zoom &Out"
			Calling DLGSNCZoomOut_Clicked

		Control OKButton
			Position 120,85		Width 40
			Title "Save"
			Calling DLGSNCOK_Clicked
		Control CancelButton
			Position 165,85	Width 40

	If not CommandInfo(CMD_INFO_DLG_OK) Then
		Drop Table __NODE__CHANGER
		Exit Function
	End If

	Drop Table __NODE__CHANGER
	oInput	= moInput
	Alter Object oInput
		Info OBJ_INFO_PEN, mpenOrig

DLGSetNodeCoordinate = TRUE

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSetNodeCoordinate")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCDialog_OnLoad

OnError GoTo ErrorOccured

	If mbSupportMZ And SystemInfo(SYS_INFO_MIVERSION) >= 2300 Then
		Alter Control CTRL_CHK_Z	Enable
		Alter Control CTRL_TXT_Z	Enable
		Alter Control CTRL_CHK_M	Enable
		Alter Control CTRL_TXT_M	Enable
	Else
		Alter Control CTRL_CHK_Z	Disable
		Alter Control CTRL_TXT_Z	Disable
		Alter Control CTRL_CHK_M	Disable
		Alter Control CTRL_TXT_M	Disable
	End If

	Call DLGSNCRefreshDialog

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCDialog_OnLoad")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCOK_Clicked

OnError GoTo ErrorOccured

	Call DLGSNCRefreshObject

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCNextNode_Clicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCPrevNode_Clicked

OnError GoTo ErrorOccured

	Call DLGSNCRefreshObject

	mnSegment	= mnSegment
	mnNode	= mnNode - 1
	If mnNode <= 0 Then
		mnNode = 1
	End If

	Call DLGSNCRefreshDialog

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCPrevNode_Clicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCNextNode_Clicked

OnError GoTo ErrorOccured

	Call DLGSNCRefreshObject

	mnSegment	= mnSegment
	mnNode	= mnNode + 1
	If mnNode > ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment) Then
		mnNode = ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment)
	End If

	Call DLGSNCRefreshDialog

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCNextNode_Clicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCDeleteNode_Clicked

Dim	bFirstDeleted, bLastDeleted As Logical,
	nNextNode As Integer

OnError GoTo ErrorOccured

	If ObjectInfo(moInput, OBJ_INFO_TYPE) = OBJ_TYPE_REGION Then
		If mnNode = 1 Then
			bFirstDeleted	= TRUE
		ElseIf mnNode = ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment) Then
			bLastDeleted 	= TRUE
		End If
	End If

	Alter Object moInput
		Node Remove Position mnSegment, mnNode

	If bLastDeleted Then
'		Alter Object moInput
'			Node Remove Position mnSegment, 1
		nNextNode = ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment)
	ElseIf bFirstDeleted Then
'		Alter Object moInput
'			Node Remove Position mnSegment, ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment)
		nNextNode = 1
	Else
		nNextNode = mnNode
	End If

	Alter Object moInput
		Info OBJ_INFO_PEN, mpenTemp

	Update __NODE__CHANGER
		Set OBJ = moInput
		Where ROWID = 1

	mnSegment	= mnSegment
	mnNode	= nNextNode
	If mnNode > ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment) Then
		mnNode = ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment)
	End If

	Call DLGSNCRefreshDialog

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCNextNode_Clicked")
	Call ERRShow()

End Sub


'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCZoomIn_Clicked

OnError GoTo ErrorOccured

	Set Map
		Window mnMID
		Zoom (0.5 * MapperInfo(mnMID, MAPPER_INFO_ZOOM))

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCZoomIn_Clicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCZoomOut_Clicked

OnError GoTo ErrorOccured

	Set Map
		Window mnMID
		Zoom (2 * MapperInfo(mnMID, MAPPER_INFO_ZOOM))

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCZoomOut_Clicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCObjectHasZ_Clicked

OnError GoTo ErrorOccured

	If ReadControlValue(CTRL_CHK_Z) Then
		Alter Control CTRL_TXT_Z Enable
	Else
		Alter Control CTRL_TXT_Z Disable
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCObjectHasZ_Clicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCObjectHasM_Clicked

OnError GoTo ErrorOccured

	If ReadControlValue(CTRL_CHK_M) Then
		Alter Control CTRL_TXT_M Enable
	Else
		Alter Control CTRL_TXT_M Disable
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCObjectHasM_Clicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCRefreshDialog

OnError GoTo ErrorOccured

	mfX	= ObjectNodeX(moInput, mnSegment, mnNode)
	mfY	= ObjectNodeY(moInput, mnSegment, mnNode)
	If mbSupportMZ Then
		If ObjectInfo(moInput, OBJ_INFO_HAS_Z) Then
			If ObjectNodeHasZ(moInput, mnSegment, mnNode) Then
				Alter Control CTRL_CHK_Z	Value TRUE
				Alter Control CTRL_CHK_Z	Disable
'				Alter Control CTRL_TXT_Z	Enable
				mfZ	= ObjectNodeZ(moInput, mnSegment, mnNode)
			Else
				Alter Control CTRL_CHK_Z	Value FALSE
				Alter Control CTRL_CHK_Z	Enable
'				Alter Control CTRL_TXT_Z	Disable
				mfZ	= 0.00
			End If
		Else
			Alter Control CTRL_CHK_Z	Value FALSE
			Alter Control CTRL_CHK_Z	Enable
			mfZ	= 0.00
		End If
		If ObjectInfo(moInput, OBJ_INFO_HAS_M) Then
			If ObjectNodeHasM(moInput, mnSegment, mnNode) Then
				Alter Control CTRL_CHK_M	Value TRUE
				Alter Control CTRL_CHK_M	Disable
'				Alter Control CTRL_TXT_M	Enable
				mfM	= ObjectNodeM(moInput, mnSegment, mnNode)
			Else
				Alter Control CTRL_CHK_M	Value FALSE
				Alter Control CTRL_CHK_M	Enable
'				Alter Control CTRL_TXT_M	Disable
				mfM	= 0.00
			End If
		Else
			Alter Control CTRL_CHK_M	Value FALSE
			Alter Control CTRL_CHK_M	Enable
			mfM	= 0.00
		End If
	End If

	Call DLGSNCObjectHasZ_Clicked
	Call DLGSNCObjectHasM_Clicked

	Alter Control CTRL_LBL_SEGMENT_NODE	Title "Segment " & FormatNumber$(mnSegment) & " - Node " & FormatNumber$(mnNode) & " of " & FormatNumber$(ObjectInfo(moInput, OBJ_INFO_NPOLYGONS + mnSegment))
'	Alter Control CTRL_TXT_X				Value FormatNumber$(mfX)
	Alter Control CTRL_TXT_X				Value Format$(mfX, ",0.000000")
'	Alter Control CTRL_TXT_Y				Value FormatNumber$(mfY)
	Alter Control CTRL_TXT_Y				Value Format$(mfY, ",0.000000")

	If mbSupportMZ Then
		Alter Control CTRL_TXT_Z			Value Format$(mfZ, ",0.000000")
		Alter Control CTRL_TXT_M			Value Format$(mfM, ",0.000000")
	End If

	Alter Object moPoint
		Geography OBJ_GEO_POINTX, mfX
	Alter Object moPoint
		Geography OBJ_GEO_POINTY, mfY
	Alter Object moPoint
		Info OBJ_INFO_SYMBOL, msymTemp

	Set Map
		Window mnMID
		Center (mfX, mfY)

	Update __NODE__CHANGER
		Set OBJ = moPoint
		Where ROWID = 2

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCRefreshDialog")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes
'Parameters:
'
'**********************************************************************************************''
Sub DLGSNCRefreshObject

Dim	fX, fY, fZ, fM As Float,
	sX, sY, sZ, sM As String

OnError GoTo ErrorOccured

	sX	= ReadControlValue(CTRL_TXT_X)
	sY	= ReadControlValue(CTRL_TXT_Y)

	If mbSupportMZ And SystemInfo(SYS_INFO_MIVERSION) >= 2300 Then
		sZ	= ReadControlValue(CTRL_TXT_Z)
		sM	= ReadControlValue(CTRL_TXT_M)
	End If

	If sX = "" or sY = "" Then
		Note "The X og Y coordinate are empty. Ignoring this change"
		Exit Sub
	End if

	fX	= DeformatNumber$(sX)
	fY	= DeformatNumber$(sY)

	fZ	= DeformatNumber$(sZ)
	fM	= DeformatNumber$(sM)

	If mbSupportMZ And SystemInfo(SYS_INFO_MIVERSION) >= 2300 Then
		If ReadControlValue(CTRL_CHK_Z) And ReadControlValue(CTRL_CHK_M) Then
			Alter Object moInput
				Node Set Position mnSegment, mnNode (fX, fY, fZ, fM)
		ElseIf ReadControlValue(CTRL_CHK_Z) Then
			Alter Object moInput
				Node Set Position mnSegment, mnNode (fX, fY, fZ)
		ElseIf ReadControlValue(CTRL_CHK_M) Then
			Alter Object moInput
				Node Set Position mnSegment, mnNode (fX, fY, , fM)
		End If
	Else
		Alter Object moInput
			Node Set Position mnSegment, mnNode (fX, fY)
	End If

	Alter Object moInput
		Info OBJ_INFO_PEN, mpenTemp

	Update __NODE__CHANGER
		Set OBJ = moInput
		Where ROWID = 1

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DLGSNCRefreshDialog")
	Call ERRShow()

End Sub